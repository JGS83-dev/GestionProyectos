// <auto-generated />
using System;
using GestionProyectos.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionProyectos.Migrations
{
    [DbContext(typeof(GestionProyectosContextDb))]
    partial class GestionProyectosContextDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionProyectos.Models.Asignaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmpleadoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProyectoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("RolProyectoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("RolProyectoId");

                    b.ToTable("Asignaciones");
                });

            modelBuilder.Entity("GestionProyectos.Models.Empleados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoEmpleado")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("FechaContratacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreEmpleado")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("PuestoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PuestoId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("GestionProyectos.Models.Proyectos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionProyecto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreProyecto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("GestionProyectos.Models.PuestoEmpleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombrePuestoEmpleado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PuestoEmpleado");
                });

            modelBuilder.Entity("GestionProyectos.Models.RolesProyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreRolProyecto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RolesProyectos");
                });

            modelBuilder.Entity("GestionProyectos.Models.Asignaciones", b =>
                {
                    b.HasOne("GestionProyectos.Models.Empleados", "Empleados")
                        .WithMany("Asignaciones")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionProyectos.Models.Proyectos", "Proyectos")
                        .WithMany("Asignaciones")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionProyectos.Models.RolesProyecto", "RolesProyecto")
                        .WithMany("Asignaciones")
                        .HasForeignKey("RolProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleados");

                    b.Navigation("Proyectos");

                    b.Navigation("RolesProyecto");
                });

            modelBuilder.Entity("GestionProyectos.Models.Empleados", b =>
                {
                    b.HasOne("GestionProyectos.Models.PuestoEmpleado", "PuestoEmpleado")
                        .WithMany("Empleados")
                        .HasForeignKey("PuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PuestoEmpleado");
                });

            modelBuilder.Entity("GestionProyectos.Models.Empleados", b =>
                {
                    b.Navigation("Asignaciones");
                });

            modelBuilder.Entity("GestionProyectos.Models.Proyectos", b =>
                {
                    b.Navigation("Asignaciones");
                });

            modelBuilder.Entity("GestionProyectos.Models.PuestoEmpleado", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("GestionProyectos.Models.RolesProyecto", b =>
                {
                    b.Navigation("Asignaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
